package com.csye6225.fall2018.coursepractise.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.csye6225.fall2018.coursepractise.datamodel.CourseBoard;
import com.csye6225.fall2018.coursepractise.datamodel.DynamoDbConnector;
import com.csye6225.fall2018.coursepractise.datamodel.InMemoryDatabase;
import com.csye6225.fall2018.coursepractise.datamodel.Student;

public class CourseBoardsService {
	static HashMap<Long, CourseBoard> board_Map = InMemoryDatabase.getCourseBoardDB();
	static DynamoDbConnector dynamoDb;
	DynamoDBMapper mapper;
	
	public CourseBoardsService() {
		dynamoDb = new DynamoDbConnector();
		dynamoDb.init();
		mapper = new DynamoDBMapper(dynamoDb.getClient());		
	}
	//adding a board
/*	public void addCourseBoard(String courseId) {
		long nextAvailableId = board_Map.size() + 1;
		CourseBoard board = new CourseBoard(nextAvailableId, courseId);
		board_Map.put(nextAvailableId, board);
	}
*/	
/*	public CourseBoard addCourseBoard(CourseBoard board) {
		long nextAvailableId = board_Map.size() + 1;
		board.setBoardId(nextAvailableId);
		board_Map.put(nextAvailableId, board);
		return board_Map.get(nextAvailableId);
	}
*/	
	//getting a board by courseId
	public CourseBoard getBoard(String courseId) {
		for (CourseBoard board : board_Map.values()) {
			if(board.getCourseId().equals(courseId)) {
				return board;
			}
		}
		return new CourseBoard();
	}
	
	//delete a board: used when deleting a course
/*	public void deleteBoard(String courseId) {
		for(CourseBoard board: board_Map.values()) {
			if(board.getCourseId().equals(courseId)) {
				board_Map.remove(board.getBoardId());
			}
			break;//one course can only have on board
		}
	}*/
}
