package com.amazonaws.lambda.demo;

import com.amazonaws.auth.EnvironmentVariableCredentialsProvider;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.DynamodbEvent;
import com.amazonaws.services.lambda.runtime.events.DynamodbEvent.DynamodbStreamRecord;

public class InvokeStepFunction implements RequestHandler<DynamodbEvent, String> {

	static AmazonDynamoDB dynamoDb;
	
    @Override
    public String handleRequest(DynamodbEvent event, Context context) {
        context.getLogger().log("Received event: " + event);

        for (DynamodbStreamRecord record : event.getRecords()) {
            context.getLogger().log(record.getEventID());
            context.getLogger().log(record.getEventName());
            context.getLogger().log(record.getDynamodb().toString());
        }
        return event.toString();
    }

    private void initDynamoDbClient() {
    	if(dynamoDb == null) {				
			dynamoDb = AmazonDynamoDBClientBuilder
					.standard()
					.withCredentials(new EnvironmentVariableCredentialsProvider())
					.withRegion("us-east-2")
					.build();
		}
    }
}